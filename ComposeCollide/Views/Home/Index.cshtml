@model ComposeCollide.Shared.ScoreDetail

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="user-scalable=no, width=320, initial-scale=1" />
    <title>Compose/Collide</title>
    <link rel="stylesheet" type="text/css" href="~/Content/Reset.css" />
    <link rel="stylesheet" type="text/css" href="~/Content/Site.css" />
</head>
<body>
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <p class="title">Compose/Collide</p>
        
        <div id="collaborate" data-active="on"></div>

        <table id="grid"></table>

        <div id="play" data-status="ready"></div>
    }

    <script language="javascript" type="text/javascript">
        $(function () {
            buildTable();

            $(".beat").click(function () {
                var previous = $(this).attr("data-active");
                $(this).attr("data-active", previous == "on" ? "off" : "on");
            });

            $("#collaborate").click(function () {
                var previous = $(this).attr("data-active");
                $(this).attr("data-active", previous == "on" ? "off" : "on");
                $("#solo").toggle(previous == "on");
            });

            $("#play").click(function () {
                var name = prompt("Please tell us your name", "");
                if (!name) return false;

                var data = {
                    ScoreInfo: getScore(),
                    IsCollaboration: $("#collaborate").attr("data-active") == "on",
                    Creator: name
                };

                $.ajax({
                    url: "/Home/Index",
                    type: "POST",
                    data: JSON.stringify(data),
                    dataType: "json",
                    contentType: 'application/json; charset=utf-8',
                });

                alert("Score sent");

                return false;
            });

            $("tr a.decrease").click(function () {
                var track = $(this).parent().closest("tr");
                var currentLength = track.data("length");
                if (currentLength == 1) return;
                track.find("td[data-beat='" + currentLength + "']").hide();
                track.data("length", currentLength - 1);
            });

            $("tr a.increase").click(function () {
                var track = $(this).parent().closest("tr");
                var currentLength = track.data("length");
                if (currentLength == 16) return;
                track.find("td[data-beat='" + (currentLength + 1) + "']").show();
                track.data("length", currentLength + 1);
            });
        });

        function buildTable() {
            var grid = $("#grid");
            var collaborateBody = document.createElement("tbody");
            var soloBody = document.createElement("tbody");
            soloBody.setAttribute("id", "solo");
            soloBody.setAttribute("style", "display:none;");
            grid.append(collaborateBody);
            grid.append(soloBody);

            for (var trackCount = 1; trackCount <= 8; trackCount++) {
                var row = addRow(trackCount > 4 ? soloBody : collaborateBody, trackCount);
                for (var beatCount = 1; beatCount <= 16; beatCount++) {
                    addInput(row, trackCount, beatCount);
                }
                addResizer(row, trackCount);
            }
        }

        function addRow(tbody, trackCount) {
            var row = document.createElement("tr");
            row.setAttribute("data-track", trackCount);
            row.setAttribute("data-length", 16);
            $(tbody).append(row);
            return row;
        }

        function addInput(row, trackCount, beatCount) {
            var column = document.createElement("td");
            column.setAttribute("data-beat", beatCount);
            if (beatCount % 4 == 0) column.setAttribute("class", "bar");
            $(row).append(column);

            var input = document.createElement("div");
            input.setAttribute("class", "beat");
            input.setAttribute("data-track", trackCount);
            input.setAttribute("data-beat", beatCount);
            input.setAttribute("data-active", "off");
            input.setAttribute("id", "t" + trackCount + "b" + beatCount);
            $(column).append(input);
        }

        function addResizer(row, trackCount) {
            var column = document.createElement("td");
            var container = document.createElement("div");
            container.setAttribute("class", "container");

            var decrease = document.createElement("a");
            decrease.innerText = "<";
            decrease.setAttribute("data-track", trackCount);
            decrease.setAttribute("class", "decrease");

            var increase = document.createElement("a");
            increase.innerText = ">";
            increase.setAttribute("data-track", trackCount);
            increase.setAttribute("class", "increase");

            $(container).append(decrease);
            $(container).append(increase);
            $(column).append(container);
            $(row).append(column);
        }

        function getScore() {
            var result = "";
            for (var trackCount = 1; trackCount <= 8; trackCount++) {
                for (var beatCount = 1; beatCount <= 16; beatCount++) {
                    var input = $("#t" + trackCount + "b" + beatCount);
                    if (!input.is(":visible")) result += "2";
                    else result += input.attr("data-active") == "on" ? "1" : "0";
                }
                result += ",";
            }
            return result;
        }
    </script>

</body>
</html>

